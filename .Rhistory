setwd("~/")
exp(10)
X = 7
vektor1 = c(1,3,5,7,9)
vektor2 = 2:7
vektor1
vektor1
vektor1[2:4]
vektor1[2:4]*2
vektor1[2:4]*2 //mengambil data pada nomor elemen 2 - 4 dan setiap elemen dikali 2
vektor1[2:4]
vektor1[2:4]*2 #mengambil data pada nomor elemen 2 - 4 dan setiap elemen dikali 2
vektor2 <- 2:7
vektor2 <- 2:7
vektor2
seq(from = 1, to = 7, by = 1)
seq(1,7,1/3)
rep(1, times = 10)
rep(1,10)
rep(seq(1,7,1/3))
rep(seq(1,7,1/3) times = 3)
rep(seq(1,7,1/3), times = 3)
vektor1+vektor3
vektor3 = c(3,4,5,6,7)
vektor1+vektor3
vektor1*vektor3
vektor1*vektor2
mat = matrix(c(1,2,3,4,5,6,7,8,9), nrow = 3, byrow = TRUE)
mat
mat[2,3]
mat[c(1:2) 3]
mat[c(1:2), 3]
mat*2
mat2 = matrix(c(2,3,4,5,6,7,8,9,10), nrow = 3, byrow = TRUE)
mat2
mat2*mat
#operasi pada data numerik dan faktor
x = c(0,1,2,3,4)
y = as,factor(x)
y = as.factor(x)
levels(x)
summary(x)
summary(y)
x*2
levels(x)
summary(y) #mengecek jumlah angkanya ada berapa kali yang sama
#operasi pada data numerik dan faktor
x = c(0,1,2,3,4,1,2)
y = as.factor(x)
x*2
levels(x)
summary(y) #mengecek jumlah angkanya ada berapa kali yang sama
setwd("C:/Users/Naufal/OneDrive/Desktop/data science R")
df = read.csv('Social_Network_Ads.csv')
df$User.ID = NULL
#Feature Scaling
df[,1:2] = scale(df[,1:2])
library(caTools)
set.seed(123)
split = sample.split(df$Purchased,SplitRatio = 0.7)
training_tes = subset(df,split == TRUE)
test_tes = subset(df,split == FALSE)
#Train logistic regression
classifier = glm(formula = Purchased ~.,
family = binomial,
data = training_tes)
summary(classifier)
#predict new data
prob_pred = predict(classifier,
type = 'response',
newdata = test_tes[-3])
prob_pred
y_pred = ifelse(prob_pred >= 0.5, 1, 0)
result = cbind(test_tes,y_pred)
#conf matrix
cm = table(test_tes[,3],y_pred)
cm
#auc
y_pred_num = as.numeric(y_pred)
colAUC(y_pred_num, test_tes[,3],plotROC = TRUE)
df = read.csv('Social_Network_Ads.csv')
df$User.ID = NULL
#Feature Scaling
df[,1:2] = scale(df[,1:2])
library(caTools)
set.seed(123)
split = sample.split(df$Purchased,SplitRatio = 0.7)
training_tes = subset(df,split == TRUE)
test_tes = subset(df,split == FALSE)
#Train Model KNN
library(class)
y_pred = knn(train = training_tes[,-3],
test = test_tes[,-3],
cl = training_tes[,3],
k= 5
)
summary(y_pred)
result = cbind(test_tes,y_pred)
df = read.csv('Social_Network_Ads.csv')
df$User.ID = NULL
#Feature Scaling
df[,1:2] = scale(df[,1:2])
library(caTools)
set.seed(123)
split = sample.split(df$Purchased,SplitRatio = 0.7)
training_tes = subset(df,split == TRUE)
test_tes = subset(df,split == FALSE)
#Train Model KNN
library(class)
y_pred = knn(train = training_tes[,-3],
test = test_tes[,-3],
cl = training_tes[,3],
k= 5
)
summary(y_pred)
result = cbind(test_tes,y_pred)
#conf matrix
cm = table(test_tes[,3],y_pred)
cm
#auc
y_pred_num = as.numeric(y_pred)
colAUC(y_pred_num, test_tes[,3],plotROC = TRUE)
df = read.csv('Social_Network_Ads.csv')
df$User.ID = NULL
df$Purchased = as.factor(df$Purchased)
library(caTools)
set.seed(123)
split = sample.split(df$Purchased,SplitRatio = 0.7)
training_tes = subset(df,split == TRUE)
test_tes = subset(df,split == FALSE)
#Train Random Forest
library(randomForest)
classifier = randomForest(x = training_tes[-3],
y = training_tes$Purchased,
ntree = 10
)
y_pred = predict(classifier,newdata = test_tes[-3])
result = cbind(test_tes,y_pred)
#conf matrix
cm = table(test_tes[,3],y_pred)
cm
#auc
y_pred_num = as.numeric(y_pred)
colAUC(y_pred_num, test_tes[,3],plotROC = TRUE)
